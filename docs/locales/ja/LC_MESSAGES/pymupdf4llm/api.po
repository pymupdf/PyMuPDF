# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2024, Artifex
# This file is distributed under the same license as the PyMuPDF package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMuPDF 1.24.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-17 15:00+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../header.rst:-1 161fa590288f4fd0b6ddb48d1fcf5000
msgid "Artifex"
msgstr ""

#: ../../header.rst:-1 2f1e24042a8a417186402dba23a28c1a
msgid ""
"PyMuPDF is a high-performance Python library for data extraction, "
"analysis, conversion & manipulation of PDF (and other) documents."
msgstr ""

#: ../../header.rst:-1 1ead176e0cf24a12aa54d5bd556c6eba
msgid ""
"PDF Text Extraction, PDF Image Extraction, PDF Conversion, PDF Tables, "
"PDF Splitting, PDF Creation, Pyodide, PyScript"
msgstr ""

#: ../../pymupdf4llm/api.rst:9 dd1b10222a314b44977b976d86511926
msgid "API"
msgstr ""

#: ../../pymupdf4llm/api.rst:12 308ebba9a9b747ec98873583cc86d573
msgid "The |PyMuPDF4LLM| API"
msgstr ""

#: ../../pymupdf4llm/api.rst:17 29230644e34341699ebb41eda2822f8b
msgid "Prints the version of the library."
msgstr ""

#: ../../pymupdf4llm/api.rst:21 7a3872169c9342cd931823dbc9b0c9db
msgid ""
"Read the pages of the file and outputs the text of its pages in "
"|Markdown| format. How this should happen in detail can be influenced by "
"a number of parameters. Please note that there exists **support for "
"building page chunks** from the |Markdown|  text."
msgstr ""

#: ../../pymupdf4llm/api.rst 941ff3e5d21144598a204c133232c827
#: f8a657b6752e41dba12869934f34b892 fd61c3859cb646a5a245a80966304da4
msgid "Parameters"
msgstr ""

#: ../../pymupdf4llm/api.rst:23 ../../pymupdf4llm/api.rst:117
#: 34f6f50149e945258b44f54dd7171378 bf4d0f40f7ea4522bc4209d74f4d470c
msgid ""
"the file, to be specified either as a file path string, or as a |PyMuPDF|"
" Document (created via `pymupdf.open`). In order to use `pathlib.Path` "
"specifications, Python file-like objects, documents in memory etc. you "
"**must** use a |PyMuPDF| Document."
msgstr ""

#: ../../pymupdf4llm/api.rst:25 6efdf54f275f45698e578a73fc418ff9
msgid ""
"optional, the pages to consider for output (caution: specify 0-based page"
" numbers). If omitted all pages are processed."
msgstr ""

#: ../../pymupdf4llm/api.rst:27 dfc90f44dd6d48dbaa8f4932cc65c126
msgid ""
"optional. Use this if you want to provide your own header detection "
"logic. This may be a callable or an object having a method named "
"`get_header_id`. It must accept a text span (a span dictionary as "
"contained in :meth:`~.extractDICT`) and a keyword parameter \"page\" "
"(which is the owning :ref:`Page <page>` object). It must return a string "
"\"\" or up to 6 \"#\" characters followed by 1 space. If omitted, a full "
"document scan will be performed to find the most popular font sizes and "
"derive header levels based on them. To completely avoid this behavior "
"specify `hdr_info=lambda s, page=None: \"\"` or `hdr_info=False`."
msgstr ""

#: ../../pymupdf4llm/api.rst:29 df8708774f1d47c4a5c89b81744fd416
msgid ""
"when encountering images or vector graphics, images will be created from "
"the respective page area and stored in the specified folder. Markdown "
"references will be generated pointing to these images. Any text contained"
" in these areas will not be included in the text output (but appear as "
"part of the images). Therefore, if for instance your document has text "
"written on full page images, make sure to set this parameter to `False`."
msgstr ""

#: ../../pymupdf4llm/api.rst:31 7d5b9c4adcdf4b978bdede054e4b208a
msgid ""
"like `write_images`, but images will be included in the markdown text as "
"base64-encoded strings. Ignores `write_images` and `image_path` if used. "
"This may drastically increase the size of your markdown text."
msgstr ""

#: ../../pymupdf4llm/api.rst:33 13da05a3d8474a6da6180273be172342
msgid ""
"(New in v.0.0.20) Disregard images on the page. This may help detecting "
"text correctly when pages are very crowded (often the case for documents "
"representing presentation slides). Also speeds up processing time."
msgstr ""

#: ../../pymupdf4llm/api.rst:35 093a637de1f94e6b9662bb50238e3509
msgid ""
"(New in v.0.0.20) Disregard vector graphics on the page. This may help "
"detecting text correctly when pages are very crowded (often the case for "
"documents representing presentation slides). Also speeds up processing "
"time. Vector graphics are still used for table detection."
msgstr ""

#: ../../pymupdf4llm/api.rst:37 1b13e6911f7a493881726a6c198e6a6f
#, python-format
msgid ""
"this must be a positive value less than 1. Images are ignored if `width /"
" page.rect.width <= image_size_limit` or `height / page.rect.height <= "
"image_size_limit`. For instance, the default value 0.05 means that to be "
"considered for inclusion, an image's width and height must be larger than"
" 5% of the page's width and height, respectively."
msgstr ""

#: ../../pymupdf4llm/api.rst:39 c90a083414394044a30a65e82b80b02b
msgid ""
"specify the desired image resolution in dots per inch. Relevant only if "
"`write_images=True`. Default value is 150."
msgstr ""

#: ../../pymupdf4llm/api.rst:41 fb19d8fd4e6e44688a5677a3b7bfa5e1
msgid ""
"store images in this folder. Relevant if `write_images=True`. Default is "
"the path of the script directory."
msgstr ""

#: ../../pymupdf4llm/api.rst:43 9f8ca9ade66c4e6f84cc5e70869c3015
msgid ""
"specify the desired image format via its extension. Default is \"png\" "
"(portable network graphics). Another popular format may be \"jpg\". "
"Possible values are all :ref:`supported output formats "
"<Supported_File_Types>`."
msgstr ""

#: ../../pymupdf4llm/api.rst:45 c2184864835d4f2f830f1d7d39fe25b8
msgid ""
"generate text output even when overlapping images / graphics. This text "
"then appears after the respective image. If `write_images=True` this "
"parameter may be `False` to suppress repetition of text on images."
msgstr ""

#: ../../pymupdf4llm/api.rst:47 75d9541669704af890db0d2712359ad3
msgid ""
"a float or a sequence of 2 or 4 floats specifying page borders. Only "
"objects inside the margins will be considered for output.  * `margin=f` "
"yields `(f, f, f, f)` for `(left, top, right, bottom)`. * `(top, bottom)`"
" yields  `(0, top, 0, bottom)`. * To always read full pages "
"**(default)**, use `margins=0`."
msgstr ""

#: ../../pymupdf4llm/api.rst:47 4ee549281ffb40acac6450df14f68ad2
msgid ""
"a float or a sequence of 2 or 4 floats specifying page borders. Only "
"objects inside the margins will be considered for output."
msgstr ""

#: ../../pymupdf4llm/api.rst:49 68496561cfa84781b9daf4f2baf057b5
msgid "`margin=f` yields `(f, f, f, f)` for `(left, top, right, bottom)`."
msgstr ""

#: ../../pymupdf4llm/api.rst:50 a0d0c48ee9f046bb8b64d202127a7386
msgid "`(top, bottom)` yields  `(0, top, 0, bottom)`."
msgstr ""

#: ../../pymupdf4llm/api.rst:51 a9b037ad3086480a99f975d52c507035
msgid "To always read full pages **(default)**, use `margins=0`."
msgstr ""

#: ../../pymupdf4llm/api.rst:53 9cde949c00e44ababef22b54e7f08589
msgid ""
"if `True` the output will be a list of `Document.page_count` dictionaries"
" (one per page). Each dictionary has the following structure:  - "
"**\"metadata\"** - a dictionary consisting of the document's metadata "
":attr:`Document.metadata`, enriched with additional keys "
"**\"file_path\"** (the file name), **\"page_count\"** (number of pages in"
" document), and **\"page_number\"** (1-based page number).  - "
"**\"toc_items\"** - a list of Table of Contents items pointing to this "
"page. Each item of this list has the format `[lvl, title, pagenumber]`, "
"where `lvl` is the hierarchy level, `title` a string and `pagenumber` as "
"a 1-based page number.  - **\"tables\"** - a list of tables on this page."
" Each item is a dictionary with keys \"bbox\", \"row_count\" and "
"\"col_count\". Key \"bbox\" is a `pymupdf.Rect` in tuple format of the "
"table's position on the page.  - **\"images\"** - a list of images on the"
" page. This a copy of page method :meth:`Page.get_image_info`.  - "
"**\"graphics\"** - a list of vector graphics rectangles on the page. This"
" is a list of boundary boxes of clustered vector graphics as delivered by"
" method :meth:`Page.cluster_drawings`.  - **\"text\"** - page content as "
"|Markdown| text.  - **\"words\"** - if `extract_words=True` was used. "
"This is a list of tuples `(x0, y0, x1, y1, \"wordstring\", bno, lno, "
"wno)` as delivered by `page.get_text(\"words\")`. The **sequence** of "
"these tuples however is the same as produced in the markdown text string "
"and thus honors multi-column text. This is also true for text in tables: "
"words are extracted in the sequence of table row cells."
msgstr ""

#: ../../pymupdf4llm/api.rst:53 abc8f7f8a91e4d97b93a9eab887bc295
msgid ""
"if `True` the output will be a list of `Document.page_count` dictionaries"
" (one per page). Each dictionary has the following structure:"
msgstr ""

#: ../../pymupdf4llm/api.rst:55 01581b16bd3849528107486df1e89416
msgid ""
"**\"metadata\"** - a dictionary consisting of the document's metadata "
":attr:`Document.metadata`, enriched with additional keys "
"**\"file_path\"** (the file name), **\"page_count\"** (number of pages in"
" document), and **\"page_number\"** (1-based page number)."
msgstr ""

#: ../../pymupdf4llm/api.rst:57 f3be96984c334a7b918bebbc9fb08cc4
msgid ""
"**\"toc_items\"** - a list of Table of Contents items pointing to this "
"page. Each item of this list has the format `[lvl, title, pagenumber]`, "
"where `lvl` is the hierarchy level, `title` a string and `pagenumber` as "
"a 1-based page number."
msgstr ""

#: ../../pymupdf4llm/api.rst:59 b7213edeefad4d1ea798afc49d6991e9
msgid ""
"**\"tables\"** - a list of tables on this page. Each item is a dictionary"
" with keys \"bbox\", \"row_count\" and \"col_count\". Key \"bbox\" is a "
"`pymupdf.Rect` in tuple format of the table's position on the page."
msgstr ""

#: ../../pymupdf4llm/api.rst:61 91dc6a17d4bc40ed9d06b1a8356b42b1
msgid ""
"**\"images\"** - a list of images on the page. This a copy of page method"
" :meth:`Page.get_image_info`."
msgstr ""

#: ../../pymupdf4llm/api.rst:63 c54878d36f5146adb1fe1b606d4791bc
msgid ""
"**\"graphics\"** - a list of vector graphics rectangles on the page. This"
" is a list of boundary boxes of clustered vector graphics as delivered by"
" method :meth:`Page.cluster_drawings`."
msgstr ""

#: ../../pymupdf4llm/api.rst:65 3ac5b97ce14e432eb3a16cf5a66f7bbc
msgid "**\"text\"** - page content as |Markdown| text."
msgstr ""

#: ../../pymupdf4llm/api.rst:67 a5cfe753b006454aa357cbbe832c210a
msgid ""
"**\"words\"** - if `extract_words=True` was used. This is a list of "
"tuples `(x0, y0, x1, y1, \"wordstring\", bno, lno, wno)` as delivered by "
"`page.get_text(\"words\")`. The **sequence** of these tuples however is "
"the same as produced in the markdown text string and thus honors multi-"
"column text. This is also true for text in tables: words are extracted in"
" the sequence of table row cells."
msgstr ""

#: ../../pymupdf4llm/api.rst:69 133ebcf3b9294b2b8366a8aba0b23ff0
msgid ""
"(New in v.0.0.19) Overwrites or sets the desired image file name of "
"written images. Useful when the document is provided as a memory object "
"(which has no inherent file name)."
msgstr ""

#: ../../pymupdf4llm/api.rst:71 3940dc63e1554b3d9d74de2b17a78718
msgid ""
"specify a desired page width. This is ignored for documents with a fixed "
"page width like PDF, XPS etc. **Reflowable** documents however, like "
"e-books, office [#f2]_ or text files have no fixed page dimensions and by"
" default are assumed to have Letter format width (612) and an "
"**\"infinite\"** page height. This means that the **full document is "
"treated as one large page.**"
msgstr ""

#: ../../pymupdf4llm/api.rst:73 6acbf074eb9d4865a46a6022c941a389
msgid ""
"specify a desired page height. For relevance see the `page_width` "
"parameter. If using the default `None`, the document will appear as one "
"large page with a width of `page_width`. Consequently in this case, no "
"markdown page separators will occur (except the final one), respectively "
"only one page chunk will be returned."
msgstr ""

#: ../../pymupdf4llm/api.rst:75 b4f7575c9b304d5c85bb2720b91f43a1
msgid ""
"`table detection strategy "
"<https://pymupdf.readthedocs.io/en/latest/page.html#Page.find_tables>`_. "
"Default is `\"lines_strict\"` which ignores background colors. In some "
"occasions, other strategies may be more successful, for example "
"`\"lines\"` which uses all vector graphics objects for detection.  "
"**Changed in v0.0.19:** A value of `None` will not perform any table "
"detection at all. This may be useful when you know that your document "
"contains no tables. Execution time savings can be significant."
msgstr ""

#: ../../pymupdf4llm/api.rst:77 551ad070a28c4c4bbef0cf2630c6e10c
msgid ""
"use this to limit dealing with excess amounts of vector graphics "
"elements. Scientific documents, or pages simulating text via graphics "
"commands may contain tens of thousands of these objects. As vector "
"graphics are analyzed for multiple purposes, runtime may quickly become "
"intolerable. With this parameter, all vector graphics will be ignored if "
"their count exceeds the threshold. **Changed in v0.0.19:** The page will "
"still be processed, and text, tables and images should be extracted."
msgstr ""

#: ../../pymupdf4llm/api.rst:79 d0103d4e9c6946cf8321f2294f23fcf2
msgid ""
"if `True` then mono-spaced text does not receive special formatting. Code"
" blocks will no longer be generated. This value is set to `True` if "
"`extract_words=True` is used."
msgstr ""

#: ../../pymupdf4llm/api.rst:81 8f48ac78fc384c959709db63b5730a8f
msgid ""
"a value of `True` enforces `page_chunks=True` and adds key \"words\" to "
"each page dictionary. Its value is a list of words as delivered by "
"PyMuPDF's `Page` method `get_text(\"words\")`. The sequence of the words "
"in this list is the same as the extracted text."
msgstr ""

#: ../../pymupdf4llm/api.rst:83 1779ec1e4ae04f0c804b23ba2da9cbec
msgid ""
"Default is `False`. A value of `True` displays a text-based progress bar "
"as pages are being converted to Markdown. It will look similar to the "
"following::  Processing input.pdf... [===================="
"                    ] (148/291)"
msgstr ""

#: ../../pymupdf4llm/api.rst:83 c653a2e980b64aa785be22f126457523
msgid ""
"Default is `False`. A value of `True` displays a text-based progress bar "
"as pages are being converted to Markdown. It will look similar to the "
"following::"
msgstr ""

#: ../../pymupdf4llm/api.rst:85 60a64f73ce9e4e36b6104e04ab4832a6
msgid ""
"Processing input.pdf... [====================                    ] "
"(148/291)"
msgstr ""

#: ../../pymupdf4llm/api.rst:88 6bb91dff3b59492082791509607679a4
msgid ""
"(New in v.0.0.19) Default is `False`. A value of `True` will use the "
"glyph number of the characters instead of the character itself."
msgstr ""

#: ../../pymupdf4llm/api.rst 7488db8324964ad488f9fafb1dd92f9c
#: 7587197f19fe4c238ed9e365ad329b65 9df1c3b59d134dd9be4aeae849c5c46e
#: b9e22ae716c742b2a0a6d7706e7d35c1
msgid "Returns"
msgstr ""

#: ../../pymupdf4llm/api.rst:90 d1f8b5ca3d924f048a6f59cde9e2be0d
msgid ""
"Either a string of the combined text of all selected document pages, or a"
" list of dictionaries."
msgstr ""

#: ../../pymupdf4llm/api.rst:94 8220254dd0384d59ac22680bb9256286
msgid ""
"Create a `pdf_markdown_reader.PDFMarkdownReader` using the `LlamaIndex`_ "
"package. Please note that this package will **not automatically be "
"installed** when installing **pymupdf4llm**."
msgstr ""

#: ../../pymupdf4llm/api.rst:96 c58efce17afb4f5da0df5be15f065deb
msgid ""
"For details on the possible arguments, please consult the LlamaIndex "
"documentation [#f1]_."
msgstr ""

#: ../../pymupdf4llm/api.rst ad546a9c3d0049e796fd7b47e8a1108d
msgid "raises"
msgstr ""

#: ../../pymupdf4llm/api.rst:98 2c059472fef84384bd37e55710ca095c
msgid "`NotImplementedError`: Please install required `LlamaIndex`_ package."
msgstr ""

#: ../../pymupdf4llm/api.rst:99 9118c323bb1448fc9adbafad8b6ffbad
msgid ""
"a `pdf_markdown_reader.PDFMarkdownReader` and issues message "
"\"Successfully imported LlamaIndex\". Please note that this method needs "
"several seconds to execute. For details on using the markdown reader "
"please see below."
msgstr ""

#: ../../pymupdf4llm/api.rst:108 134f6dcec56b4f5a83b7fdc905a221bf
msgid ""
"Create an object which maps text font sizes to the respective number of "
"'#' characters which are used by Markdown syntax to indicate header "
"levels. The object is created by scanning the document for font size "
"\"popularity\". The most popular font size and all smaller sizes are used"
" for body text. Larger font sizes are mapped to the respective header "
"levels - which correspond to the HTML tags `<h1>` to `<h6>`."
msgstr ""

#: ../../pymupdf4llm/api.rst:110 f7c809d6de944ff9bcb30e6fbec94a4b
msgid "All font sizes are rounded to integer values."
msgstr ""

#: ../../pymupdf4llm/api.rst:112 b499cbba0af94b69b8af0f94cd8863cc
msgid ""
"If more than 6 header levels would be required, then the largest number "
"smaller than the `<h6>` font size is used for body text."
msgstr ""

#: ../../pymupdf4llm/api.rst:114 50bd2d2ded7a490e820b5930fb174b45
msgid ""
"Please note that creating the object will read and inspect the text of "
"the entire document - independently of reading the document again in the "
"`to_markdown()` method subsequently. Method `to_markdown()` by default "
"**will create this object** if you do not override its `hdr_info=None` "
"parameter."
msgstr ""

#: ../../pymupdf4llm/api.rst:119 812f574b306a47c486655e86ff50596c
msgid "optional, the pages to consider. If omitted all pages are processed."
msgstr ""

#: ../../pymupdf4llm/api.rst:121 8a5e1a0685b149b1af66ad795d69f955
msgid ""
"the default font size limit for body text. Only used when the document "
"scan does not deliver valid information."
msgstr ""

#: ../../pymupdf4llm/api.rst:123 564f318802954586965f8ec524f6af29
msgid ""
"the maximum number of header levels to be used. Valid values are in "
"`range(1, 7)`. The default is 6, which corresponds to the HTML tags "
"`<h1>` to `<h6>`. A smaller value will limit the number of generated "
"header levels. For instance, a value of 3 will only generate header tags "
"\"#\", \"##\" and \"###\". Body text will be assumed for all font sizes "
"smaller than the one corresponding to \"###\"."
msgstr ""

#: ../../pymupdf4llm/api.rst:128 ddb0ae41e91f44618b88dea05580fed3
msgid ""
"Return appropriate markdown header prefix. This is either \"\" or a "
"string of \"#\" characters followed by a space."
msgstr ""

#: ../../pymupdf4llm/api.rst:130 38868ba2c7784951a15fe8d1ef2011ae
msgid ""
"Given a text span from a \"dict\"\" extraction, determine the markdown "
"header prefix string of 0 to n concatenated '#' characters."
msgstr ""

#: ../../pymupdf4llm/api.rst:133 96186998ca204d6b95c983eaec78baab
msgid ""
"a dictionary containing the text span information. This is the same "
"dictionary as returned by `page.get_text(\"dict\")`."
msgstr ""

#: ../../pymupdf4llm/api.rst:135 e91180aa37384fbd8d76c061b1b0b50c
msgid ""
"the owning page object. This can be used when additional information "
"needs to be extracted."
msgstr ""

#: ../../pymupdf4llm/api.rst:137 876fd6dd009f40bb888c26996ad84fee
msgid "a string of \"#\" characters followed by a space."
msgstr ""

#: ../../pymupdf4llm/api.rst:141 e9f0fbb3d9914a14b20acd8c93aecb8d
msgid ""
"A dictionary mapping (integer) font sizes to Markdown header strings like"
" ``{14: '# ', 12: '## '}``. The dictionary is created by the "
"`IdentifyHeaders` constructor. The keys are the font sizes of the text "
"spans in the document. The values are the respective header strings."
msgstr ""

#: ../../pymupdf4llm/api.rst:145 a387e9ca8cf6422694f17f11b8900f8d
msgid ""
"An integer value indicating the font size limit for body text. This is "
"computed as ``min(header_id.keys()) - 1``. In the above example, "
"body_limit would be 11."
msgstr ""

#: ../../pymupdf4llm/api.rst:148 12b6e9b778b142108500f8b3aca00951
msgid "**How to limit header levels (example)**"
msgstr ""

#: ../../pymupdf4llm/api.rst:150 97f840c665744d5aa56345bd771df406
msgid "Limit the generated header levels to 3::"
msgstr ""

#: ../../pymupdf4llm/api.rst:160 12e402ed008d42198663e949e45c9049
msgid "**How to provide your own header logic (example 1)**"
msgstr ""

#: ../../pymupdf4llm/api.rst:162 c2d130c42052420c80db16b810beb9c6
msgid "Provide your own function which uses pre-determined, fixed font sizes::"
msgstr ""

#: ../../pymupdf4llm/api.rst:189 89cb7ad3a36644e7934dc0bb4c12ee88
msgid "**How to provide your own header logic (example 2)**"
msgstr ""

#: ../../pymupdf4llm/api.rst:191 cf9a2b58e9ce4086a9ab3af9f16990f8
msgid ""
"This user function uses the document's Table of Contents -- under the "
"assumption that the bookmark text is also present as a header line on the"
" page (which certainly need not be the case!)::"
msgstr ""

#: ../../pymupdf4llm/api.rst:231 70402737f5cc4a82acff6c74929cbce2
msgid ""
"This is the only method of the markdown reader you should currently use "
"to extract markdown data. Please in any case ignore methods "
"`aload_data()` and `lazy_load_data()`. Other methods like "
"`use_doc_meta()` may or may not make sense. For more information, please "
"consult the LlamaIndex documentation [#f1]_."
msgstr ""

#: ../../pymupdf4llm/api.rst:233 6d6bfa39899e46da9ee69ca8102c340c
msgid "Under the hood the method will execute `to_markdown()`."
msgstr ""

#: ../../pymupdf4llm/api.rst:235 089f629a239748b1a011c9cc4d45e47a
msgid "a list of `LlamaIndexDocument` documents - one for each page."
msgstr ""

#: ../../pymupdf4llm/api.rst:239 96a7245167a64bc9937198ad512201c5
msgid ""
"For a list of changes, please see file `CHANGES.md "
"<https://github.com/pymupdf/RAG/blob/main/CHANGES.md>`_."
msgstr ""

#: ../../pymupdf4llm/api.rst:242 bd4edb68eae44ad8989bfb56e9320b2d
msgid "Footnotes"
msgstr ""

#: ../../pymupdf4llm/api.rst:243 b746861d660d446ab994c8904d5d41e2
msgid "`LlamaIndex documentation <https://docs.llamaindex.ai/en/stable/>`_"
msgstr ""

#: ../../pymupdf4llm/api.rst:245 6ac5aea47ace4dd795a865534c09ea86
msgid ""
"When using PyMuPDF-Pro, supported office documents are converted "
"internally into a PDF-like format. Therefore, they **will have fixed page"
" dimensions** and be no longer \"reflowable\". Consequently, the page "
"width and page height specifications will be ignored as well in these "
"cases."
msgstr ""

#: ../../footer.rst:60 9b34609a103941c9ba673a283a4b70b4
msgid "This documentation covers all versions up to |version|."
msgstr ""

#~ msgid ""
#~ "a float or a sequence of 2 "
#~ "or 4 floats specifying page borders. "
#~ "Only objects inside the margins will "
#~ "be considered for output.  * `margin=f`"
#~ " yields `(f, f, f, f)` for "
#~ "`(left, top, right, bottom)`. * `(top,"
#~ " bottom)` yields  `(0, top, 0, "
#~ "bottom)`. * To always read full "
#~ "pages, use `margins=0`."
#~ msgstr ""

#~ msgid "To always read full pages, use `margins=0`."
#~ msgstr ""

#~ msgid ""
#~ "if `True` the output will be a "
#~ "list of `Document.page_count` dictionaries "
#~ "(one per page). Each dictionary has "
#~ "the following structure:  - **\"metadata\"**"
#~ " - a dictionary consisting of the "
#~ "document's metadata :attr:`Document.metadata`, "
#~ "enriched with additional keys "
#~ "**\"file_path\"** (the file name), "
#~ "**\"page_count\"** (number of pages in "
#~ "document), and **\"page_number\"** (1-based "
#~ "page number).  - **\"toc_items\"** - a"
#~ " list of Table of Contents items "
#~ "pointing to this page. Each item "
#~ "of this list has the format `[lvl,"
#~ " title, pagenumber]`, where `lvl` is "
#~ "the hierarchy level, `title` a string"
#~ " and `pagenumber` as a 1-based page"
#~ " number.  - **\"tables\"** - a list"
#~ " of tables on this page. Each "
#~ "item is a dictionary with keys "
#~ "\"bbox\", \"row_count\" and \"col_count\". Key"
#~ " \"bbox\" is a `pymupdf.Rect` in "
#~ "tuple format of the table's position "
#~ "on the page.  - **\"images\"** - a"
#~ " list of images on the page. "
#~ "This a copy of page method "
#~ ":meth:`Page.get_image_info`.  - **\"graphics\"** -"
#~ " a list of vector graphics rectangles"
#~ " on the page. This is a list"
#~ " of boundary boxes of clustered "
#~ "vector graphics as delivered by method"
#~ " :meth:`Page.cluster_drawings`.  - **\"text\"** -"
#~ " page content as |Markdown| text."
#~ msgstr ""

#~ msgid ""
#~ "specify a desired page width. This "
#~ "is ignored for documents with a "
#~ "fixed page width like PDF, XPS "
#~ "etc. **Reflowable** documents however, like"
#~ " e-books, office or text files have"
#~ " no fixed page dimensions and by "
#~ "default are assumed to have Letter "
#~ "format width (612) and an "
#~ "**\"infinite\"** page height. This means "
#~ "that the full document is treated "
#~ "as one large page."
#~ msgstr ""

#~ msgid ""
#~ "table detection strategy. Default is "
#~ "`\"lines_strict\"` which ignores background "
#~ "colors. In some occasions, other "
#~ "strategies may be more successful, for"
#~ " example `\"lines\"` which uses all "
#~ "vector graphics objects for detection."
#~ msgstr ""

#~ msgid ""
#~ "use this to limit dealing with "
#~ "excess amounts of vector graphics "
#~ "elements. Typically, scientific documents or"
#~ " pages simulating text using graphics "
#~ "commands may contain tens of thousands"
#~ " of these objects. As vector graphics"
#~ " are used for table detection mainly,"
#~ " analyzing pages of this kind may "
#~ "result in excessive runtimes. You can"
#~ " exclude problematic pages via for "
#~ "instance `graphics_limit=5000` or even a "
#~ "smaller value as desired. The respective"
#~ " pages will then be ignored and "
#~ "be represented by one message line "
#~ "in the output text."
#~ msgstr ""

#~ msgid ""
#~ "if `True` then mono-spaced text "
#~ "does not receive special formatting "
#~ "treatment. Code blocks will also no "
#~ "longer be generated."
#~ msgstr ""

#~ msgid ""
#~ "a value of `True` (the default) "
#~ "displays a text-based progress bar "
#~ "as pages are being converted to "
#~ "Markdown. It will look similar to "
#~ "the following::  Processing input.pdf... "
#~ "[====================                    ] (148/291)"
#~ msgstr ""

#~ msgid ""
#~ "a value of `True` (the default) "
#~ "displays a text-based progress bar "
#~ "as pages are being converted to "
#~ "Markdown. It will look similar to "
#~ "the following::"
#~ msgstr ""

#~ msgid ""
#~ "Either a string of the combined "
#~ "text of all selected document pages "
#~ "or a list of dictionaries."
#~ msgstr ""

#~ msgid "Discord logo"
#~ msgstr ""

